programmable_hatches.gt.filtermode=Input filter (Item/Fluid)
programmable_hatches.gt.separate=Input separation (not configurable)
item.prog_circuit.name=Programming Circuit (Reset)
item.prog_circuit.name.format=Programming Circuit (%s)
item.prog_circuit.name.tooltip=3
item.prog_circuit.name.tooltip.0=Put this item into GT bus/machine(single block) inventory
item.prog_circuit.name.tooltip.1=to configure the virtual programmed circuit slot 
item.prog_circuit.name.tooltip.2=Put a Programming Cover on the bus/machine to support this function
programmable_hatches.gt.buffer=Buffer No.%s
programmable_hatches.gt.lockbuffer=Auto-unlock recipe when buffer is empty
itemGroup.proghatches=Programmable Hatches
programmable_hatches.prog_cover=Programming Cover (currently circuit #0)
programmable_hatches.gt.program=Programming Mode
item.prog_circuit.name.tooltip.warn=Why do you put this in the provider?§cDO NOT try to craft this item! Or else...
item.prog_toolkit.name=Programming Toolkit MK.II
item.prog_toolkit.name.tooltip=5
item.prog_toolkit.name.tooltip.0=Put this item in your inventory to activate it
item.prog_toolkit.name.tooltip.1=If it's activated, when encoding recipe with pattern terminal
item.prog_toolkit.name.tooltip.2=all catalyst item(with 'NC' mark) will be converted
item.prog_toolkit.name.tooltip.3=to corresponding §fProgramming Circuit
item.prog_toolkit.name.tooltip.4=SHIFT+RMB to switch between modes
item.prog_toolkit.name.tooltip.mode.0=Disabled
item.prog_toolkit.name.tooltip.mode.1=Normal Mode
programmable_hatches.cover.smart.io.true=Internal to Adjacent
programmable_hatches.cover.smart.io.false=Adjacent to Internal
programmable_hatches.cover.smart.mode.0=map o->i
programmable_hatches.cover.smart.mode.1=map i->o
programmable_hatches.cover.smart.tips.0=i:internal slot# o:adjacent slot#
programmable_hatches.cover.smart.tips.1=Use a math expression to specify a multiple-to-multiple slot# mapping
programmable_hatches.cover.smart.tips.2=Illegal math operation(like div by 0)or non-existing mapped slot# will be ignored
programmable_hatches.cover.smart.info.done=all done
programmable_hatches.cover.smart.info.target.changed=§4target changed
programmable_hatches.cover.smart.info.syntax.error=§4syntax error
programmable_hatches.cover.smart.info.validating=validating
programmable_hatches.cover.smart.info.parsing=parsing
programmable_hatches.cover.smart.info.not.inventory=§4not inventory
programmable_hatches.cover.smart.info.idle=idle
programmable_hatches.cover.smart.info.nyc=not yet computed
programmable_hatches.cover.smart.info.ftc=??§4(failed to compute)
programmable_hatches.cover.smart.info.mode.0=Adjacent Direction Internal
programmable_hatches.cover.smart.info.mode.1=Internal Direction Adjacent
programmable_hatches.cover.smart.info.gmt=generating mapping table
programmable_hatches.cover.smart.info.oob=§4(out of bound)
programmable_hatches.cover.smart.reset=Recalculate
item.proghatch.smartarm.name=Smart Robot Arm
item.proghatch.smartarm.name.tooltip.0=transfer %2$s stack(s) of item every %1$s sencond(s)
item.proghatch.smartarm.name.tooltip.1=use math expression to specify slot source and destination
item.proghatch.smartarm.name.tooltip.2=shift+RMB to print usage in chat
item.proghatch.smartarm.name.tooltip=3
programmable_hatches.cover.smart.dyn.0=Static Mode
programmable_hatches.cover.smart.dyn.1=Dynamic Mode
programmable_hatches.cover.smart.dyn.shift.for.detail=§7hold SHIFT for details
programmable_hatches.cover.smart.dyn.shift.0.0=Generate mapping table before working
programmable_hatches.cover.smart.dyn.shift.0.1=§7cannot acquire dynamic info
programmable_hatches.cover.smart.dyn.shift.0.2=§7Minimum tick interval: 1 tick
programmable_hatches.cover.smart.dyn.shift.0=3
programmable_hatches.cover.smart.dyn.shift.1.0=Calculate mapping table when running
programmable_hatches.cover.smart.dyn.shift.1.1=§7may access wireless redstone signal etc.
programmable_hatches.cover.smart.dyn.shift.1.2=§7Minimum tick interval: 5 tick
programmable_hatches.cover.smart.dyn.shift.1=3
programmable_hatches.cover.smart.info.print.dyn=No mapping table available in dynamic mode.
item.prog_toolkit.name.tooltip.mode.2=Add empty progcircuit if no NC inputs
programmable_hatches.cover.wireless.invert.true=Use inverted Redstone
programmable_hatches.cover.wireless.safe.true=Safe Mode on
programmable_hatches.cover.wireless.crashed.true=Disabled
programmable_hatches.cover.wireless.uuidsource.false=Use cover owner UUID
programmable_hatches.cover.wireless.invert.false=Use Redstone
programmable_hatches.cover.wireless.private.false=Use public frequencies
programmable_hatches.cover.wireless.safe.false=Safe Mode off
programmable_hatches.cover.wireless.crashed.false=Enable with wireless Redstone
programmable_hatches.cover.wireless.uuidsource.true=Use machine owner UUID
programmable_hatches.cover.wireless.private.true=Use private frequencies
programmable_hatches.remote.dim=Cannot work across dimension.
programmable_hatches.remote.fail=Link failed. Make sure that you're using a tricorder with recorded target.
programmable_hatches.remote.blacklisted=Link failed. Target is blacklisted to prevent infinite recursion.
programmable_hatches.remote.success=Linked successfully.
programmable_hatches.remote.unlinked=Not linked.
programmable_hatches.remote.chunk=Target chunk not loaded.
programmable_hatches.remote.nothing=Target has no tileentity.
programmable_hatches.remote.dummytarget=Target seems to have no content.
programmable_hatches.remote.ok=Working fine.
programmable_hatches.remote.detach=Linkage cleared.
programmable_hatches.cover.smart.desc.0=Binary operators:
programmable_hatches.cover.smart.desc.1=+ - * / % > >= < <= !=
programmable_hatches.cover.smart.desc.2=Ternary operator:
programmable_hatches.cover.smart.desc.3=condition?ifTrue:ifFals
programmable_hatches.cover.smart.desc.4=Function:
programmable_hatches.cover.smart.desc.5=min(a,b,c...) max(a,b,c...)
programmable_hatches.cover.smart.desc.6=--get the minimum or maximum number in arguments
programmable_hatches.cover.smart.desc.7=enabled() §7*only available in dynamic mode
programmable_hatches.cover.smart.desc.8=--get machine enabled state
programmable_hatches.cover.smart.desc.9=--0:disabled 1:enabled
programmable_hatches.cover.smart.desc.10=redstone(freq,0) §7*only available in dynamic mode
programmable_hatches.cover.smart.desc.11=--get public GT wireless Redstone, ranged from 0~15
programmable_hatches.cover.smart.desc.12=redstone(freq,1) §7*only available in dynamic mode
programmable_hatches.cover.smart.desc.13=--get private GT wireless Redstone, ranged from 0~15
programmable_hatches.cover.smart.desc=14
item.proghatch.cover.dedicated.0=Programming Cover
item.proghatch.cover.dedicated.1=Wireless Control Cover
programmable_hatches.cover.wireless.gatemode.0=AND
programmable_hatches.cover.wireless.gatemode.1=NAND
programmable_hatches.cover.wireless.gatemode.2=OR
programmable_hatches.cover.wireless.gatemode.3=NOR
programmable_hatches.cover.wireless.gatemode.4=SINGLE
item.proghatch.oc.redstone.bind=UUID bound successfully.
item.proghatches.oc.redstone.name=Gregtech Advanced Wireless Redstone Card
item.proghatches.oc.redstone.tooltip.0=Make OpenComputers accessible to GT Advanced Wireless Redstone, freeing you from 5000 frequencies limit from WR-CBE.
item.proghatches.oc.redstone.tooltip.1=Right click to bind your UUID to access your private frequencies.
item.proghatches.oc.redstone.tooltip.2=Tier 1
item.proghatches.oc.redstone.tooltip=3
item.proghatches.oc.api.name=Item API Card
item.proghatches.oc.api.tooltip.0=Provide OreDict API access and conversions between number ID and string ID.
item.proghatches.oc.api.tooltip.1=Tier 1
item.proghatches.oc.api.tooltip=2
programmable_hatches.cover.smart.probe=Probe Test
programmable_hatches.cover.smart.probe.move=Move the §4probe
programmable_hatches.tutorial=How to master Programmable Hatches in 30 minutes
programmable_hatches.tutorial.pages.0=Programming Circuit&Programming Cover\n\nProgramming Circuit is to Programming Cover is what Fluid Packet is to Fluid Packet Decoder. Programming Circuit records an Item, Programming Cover writes the recorded Item to the virtual circuit slot. 
programmable_hatches.tutorial.pages.1=Especially if a P-Circuit is empty, P-Cover will clear all virtual circuit slots.
programmable_hatches.tutorial.pages.2=This mod aims to help you to handle AE automation of recipes with NC(Not Consumed) Items as inputs in this way.
programmable_hatches.tutorial.pages.3=You might place P-Cover on single-block machines or input buses. Some advanced hatches intergrates P-Cover inside. What you need to do is to encode P-Circuit(instead of ignoring NC Items) into pattern inputs, and watch the P-Cover do the trick.
programmable_hatches.tutorial.pages.4=By the way, besides nomal NC Items like Programmed Circuits(GT5U,Bartworks or GT++), Lens,Molds,Catalysts and Shapes can also be written to virtual circuit slot using P-Cover & P-Circuit.
programmable_hatches.tutorial.pages.5=Programming Circuit Provider\n\nUses 1 ME channel. Provides crafting of P-Circuit. Put Items in its inventory to specify the target item of the P-Circuit. Costs 10AE for each P-Circuit(almost free!) and the crafting is completed instantly.
programmable_hatches.tutorial.pages.6=One single P-Circuit Provider can only provide limited types of P-Circuit. You might want many of those. \nNote: you have to put real items into thr provider to make it running, NEI Bookmarks will NOT work!
programmable_hatches.tutorial.pages.7=Programming Toolkit MK.II\n\nCarry this Item in inventory, and use the '+' button to encode patterns on ME Encoding Terminal. This toolkit will covert NC Items to corresponding P-Circuit, instead of removing it.
programmable_hatches.tutorial.pages.8=Right click to open its inventory, you can generate P-Circuit manually for testing purpose.
programmable_hatches.tutorial.pages.9=DO NOT carry multiple toolkits, this will mess things up. Shift+RMB to switch mode. Mode 1(default) is off, Mode 2 is nomal. In Mode 3, if recipe has no NC Items as inputs, it will append an extra Empty P-Circuit(a.k.a. Reseting P-Circuit).
programmable_hatches.tutorial.pages.10=Programmable Dual Input Hatch\n\nYou may call it Programmable Input Buffer if you want to.\nP-Cover is intergrated and Input Seperation Mode is forced on. Just put an ME Interface with Blocking Mode on next to it.
programmable_hatches.tutorial.pages.11=Use Encoded Patterns encoded with toolkit. ME Interface will insert Items, Fluid and P-Cicruit into the Hatch. P-Cicruit will be consumed to configure the virtual slot.
programmable_hatches.tutorial.pages.12=You will never have to worry if the recipe will be messed, just remember to turn Bloking Mode ON!
programmable_hatches.tutorial.pages.13=Buffered Programmable Dual Input Hatch\n\nIf you don't care about how it works, just treat it exactly like the non-buffered one(yes, you still have to keep Bloking Mode ON). This up-graded version will make better advantage of parallels of the Multiblock.
programmable_hatches.tutorial.pages.14=Buffered Hatch can accept almost infinity input ingredients(limited by its cap and amount of Crafting Accelerators) from ME Interface within 2 ticks, with Bloking Mode on!
programmable_hatches.tutorial.pages.15=Here is how it works, you can skip it if not interested.
programmable_hatches.tutorial.pages.16=For a Buffered Programmable Dual Input Hatch(be short for 'BPDI Hatch'), its main inventoty is called 'Input Area'. And it has several sub-inventoties called 'Buffer Area'.
programmable_hatches.tutorial.pages.17=The Multiblock can only access 'Buffer Area'. Pipes & hoppers can only access 'Input Area'.
programmable_hatches.tutorial.pages.18=When 'Buffer Area' is empty, it does nothing. ME Interface will only inject recipe ingredients to 'Input Area' once(because Blocking Mode is on). When the gametick ends, 'Buffer Area' will scan the 'Input Area' and lock the recipe.
programmable_hatches.tutorial.pages.19=When 'Buffer Area' locks a recipe, and if 'Input Area' exactly matches the locked recipe, it will be transfered to 'Buffer Area' instantly. It's so instant that ME Interface's Blocking Mode is not triggered.
programmable_hatches.tutorial.pages.20=That's why it takes 2 tick to transfer. One tick to lock and the second tick to tranfer. 
programmable_hatches.tutorial.pages.21=Some BPDI Hatch has multiple 'buffer areas', they are seperated with each other.
programmable_hatches.tutorial.pages.22=Each 'Buffer Area' has 4 virtual slots in case recipe has multiple NC Items. 'Input Area' has a virtual slot not writable by P-Circuit, it's normally used as GT++ Large Processing Factory's mode-selecting circuit.
programmable_hatches.tutorial.pages.23=A 'Buffer Area' has a capacity limit. This is not a hard limit, 'Buffer Area' may exceed the limit. That is to say, a recipe is guaranteed not to be torn. But it will refuse to accept more ingredients then.
programmable_hatches.tutorial.pages.24=The 'Power Switch' can disable the recipe recording process temporarily. 
programmable_hatches.tutorial.pages=25
item.prog_toolkit.name.tooltip.emptyinput=For automation, use Programming Circuit Provider instead.
item.proghatch.cover.dedicated.tooltips.1.0=Redstone Receiver(Internal) with Safe Mode
item.proghatch.cover.dedicated.tooltips.1=1
item.proghatch.cover.dedicated.tooltips.0=0
programmable_hatches.gt.marking.slot.0=§7Use item to mark, NEI bookmark not supported.
programmable_hatches.gt.marking.slot.1=§7Click to remove
programmable_hatches.gt.pattern=Insert Patterns
programmable_hatches.buffer.waila.000=§n§eWarn: manually inserted item, cannot lock
programmable_hatches.buffer.waila.001=§n§eWarn: manually inserted item, cannot lock
programmable_hatches.buffer.waila.010=§2Idle
programmable_hatches.buffer.waila.011=§n§fStrange situation: full and empty at the same time
programmable_hatches.buffer.waila.100=§4Locked
programmable_hatches.buffer.waila.101=§eFull
programmable_hatches.buffer.waila.110.0=§eLocked|Empty
programmable_hatches.buffer.waila.110.1=§n§fStrange situation: cannot clear recipe
programmable_hatches.buffer.waila.111=§n§fStrange situation: full and empty at the same time
programmable_hatches.buffer.waila.present=Locked Recipe:
programmable_hatches.buffer.waila.copies=§fPossible copies:%s
programmable_hatches.buffer.waila.broken=§eNot integral multiple of the locked recipe
tile.proghatch.iohub.name=IO Hub
tile.iohub.tooltip.shift.0=Integrated:
tile.iohub.tooltip.shift.1=Inventory Upgrade
tile.iohub.tooltip.shift.2=Inventory Controller Upgrade
tile.iohub.tooltip.shift.3=Tank Upgrade
tile.iohub.tooltip.shift.4=Tank Controller Upgrade
tile.iohub.tooltip.shift.5=ME Upgrade
tile.iohub.tooltip.shift.6=Transposer
tile.iohub.tooltip.shift.7=Robot(partial)
tile.iohub.tooltip.shift.8=Not that function 'store' from ME Upgrade is renamed to 'storeAE',
tile.iohub.tooltip.shift.9=due to name collision with the one from Inventory Controller.
tile.iohub.tooltip.shift=10
tile.iohub.tooltip.0=Make OC Computers access AE2 network easily.
tile.iohub.tooltip.1=Acts just like an immobile Robot with ME Upgrade installed,
tile.iohub.tooltip.2=but controlled by OC Computers via OC cable.
tile.iohub.tooltip.3=No Security Station needed, connect to AE2 network with ME cable.
tile.iohub.tooltip.4=32 Item Slots+8 Fluid Tanks
tile.iohub.tooltip.5=hold [SHIFT] to see more details
tile.iohub.tooltip=6
item.proghatches.oc.peripheral_card.name=Wireless Peripheral Bridging Card
tile.proghatch.peripheral_station.name=Wireless Peripheral Driving Station
item.proghatches.oc.peripheral_card.tooltip.unbound=Unbound
item.proghatches.oc.peripheral_card.tooltip.bad=Invalid: need resetting. Usually caused by trying to establish a multi-to-one connection.
item.proghatches.oc.peripheral_card.tooltip.valid=Channel: %s
tile.proghatches.oc.peripheral_station.waila.channel=Channel: %s
tile.proghatches.oc.peripheral_station.waila.connection=Connection: %s
tile.proghatches.oc.peripheral_station.waila.connection.true=true
tile.proghatches.oc.peripheral_station.waila.connection.false=false
tile.proghatches.oc.peripheral_station.waila.connection.out_of_range=Out of range.
tile.proghatches.oc.peripheral_station.waila.connection.more_than_one=Error: More than one computers in this network. Use wrench to reset.
item.proghatches.oc.peripheral_card.tooltip.0=Right click a Peripheral Driving Station to bind.
item.proghatches.oc.peripheral_card.tooltip.1=Shift+right click to reset.
item.proghatches.oc.peripheral_card.tooltip.2=You can install this card in ANY card slot(not limited to Casing).
item.proghatches.oc.peripheral_card.tooltip.3=Require no component channel.
item.proghatches.oc.peripheral_card.tooltip=4
tile.proghatches.peripheral_station.tooltip.0=Drive connected machines and provide components access to computer
tile.proghatches.peripheral_station.tooltip.1=with Wireless Peripheral Bridging Card bound to this station.
tile.proghatches.peripheral_station.tooltip.2=Cannot work in network that contains more than one computer.
tile.proghatches.peripheral_station.tooltip.3=Can only establish one-to-one connection with one single Wireless Peripheral Bridging Card.
tile.proghatches.peripheral_station.tooltip.4=Range:16 with no inter-dimension support
tile.proghatches.peripheral_station.tooltip.5=Require no component channel.
tile.proghatches.peripheral_station.tooltip=6
programmable_hatches.gt.updateEveryTick=This mode is intended to force the check every tick when the hatch fails to work properly. Do not enable when unnecessary, for better server performance.
programmable_hatches.addedby=Added by §1ProgrammableHatches§r
programmable_hatches.gt.lang.dir=en_US
hatch.input.dual.tier.name=Programmable Dual Input Hatch (%s)
hatch.input.dual.quad.tier.name=Programmable Multifluid Dual Input Hatch (%s)
hatch.input.buffered.dual.tier.name=Programmable Buffered Dual Input Hatch (%s)
hatch.input.buffered.dual.quad.tier.name=Programmable Buffered Multifluid Dual Input Hatch (%s)
hatch.input.buffered.dual.quad.tier.mkii.name=Programmable Advanced Buffered Multifluid Dual Input Hatch (%s)
circuitprovider.name=Programming Circuit Provider (T1)
circuitprovider.name.tech0=Programming Circuit Provider (T0)
hatch.dualinput.slave.name=Dual Input Slave
hatch.input.item.remote.name=Remote Input Bus
hatch.input.fluid.remote.name=Remote Input Hatch
hatch.input.buffered.superfluid.name=Superfluid Dual Input Hatch
hatch.input.buffered.me.name=Programmable Crafting Input Buffer
hatch.output.tenacious.name=Tenacious Ouput Bus (%s)
hatch.output.filter.name=Filter Ouput Bus (%s)
recipe_check_result_detector.name=Idle Detector
item.proghatches.eu_upgrade_module.name=Current Packet Decoder Card(WIP)
proghatches.part.tooltip.amp=The expected current that the adjacent Dynamo Hatch can provide.
proghatches.part.tooltip.volt.0=The expected voltage that the adjacent Dynamo Hatch can provide.
proghatches.part.tooltip.volt.1=Level:%s %s
proghatches.part.recycle.false=Do not recycle Current Packet
proghatches.part.recycle.true=Recycle Current Packet
proghatches.part.hint.0=Requested Current/Total Current
proghatches.part.hint.1=Note:if requested Current > 0, better not modify the expected A/V listed above.
proghatches.part.onoff.false=Disallow Current Packet request
proghatches.part.onoff.true=Allow Current Packet request
item.proghatches.part.eu.source.name=EU Source
tile.proghatches.euinterface.name=EU Interface(NYI)
item.eu_token.name=Current packet
item.eu_token.1.name=Current packet(Bound)
proghatches.eu.interface.hint.amp=Instantaneous/Sample/Assigned Current
proghatches.eu.interface.hint.volt=Actual Voltage(min/max voltage since GUI open)
proghatches.eu.interface.hint=Note:if expected Current > 0, better not modify the expected A/V listed above.
proghatches.eu.interface.tooltip.volt.0=The expected voltage that the Interface should emit.
proghatches.eu.interface.tooltip.volt.1=Level:%s %s
proghatches.eu.interface.tooltip.amp=The max current that the Interface should emit.
item.proghatch.cover.dedicated.2=Idle Detecting Cover
item.proghatch.cover.dedicated.tooltips.2.0=Place on an input hatch/bus or a Single Block Machine to make it works like an Idle Detector.
item.proghatch.cover.dedicated.tooltips.2.1=Will not block item/fluid/energy interaction.
item.proghatch.cover.dedicated.tooltips.2.2=Works on single block machine as well.
item.proghatch.cover.dedicated.tooltips.2.3=Emits a 1-tick redstone pulse when a running Multiblock turn off due to no recipe found.
item.proghatch.cover.dedicated.tooltips.2.4=Redstone wire cannot pass 1-tick pulse? Try Redstone P2P or Redstone Conduit!
item.proghatch.cover.dedicated.tooltips.2=5
itemGroup.proghatches.eucrafting=Programmable Hatches|EU Crafting
item.proghatches.euinterface.p2p.name=P2P - EU Interface
proghatches.eucreafting.finish.false=Waiting for RS pulse... 
proghatches.eucreafting.finish.true=Ready to return EU Packet
proghatches.eucreafting.p2p.connection=Cannot access the input side.
programmable_hatches.eucreafting.tutorial.pages=1
programmable_hatches.eucreafting.tutorial.pages.0=Not yet completed
programmable_hatches.eucreafting.tutorial=EU Crafting(WIP)
proghatches.eu.interface.waila.UUID=UUID: %s
proghatches.eu.interface.waila.UUID.out.0=Input P2P Info:
proghatches.eu.interface.waila.UUID.out.1= UUID: %1$s 
proghatches.eu.interface.waila.UUID.out.2= Position:[%2$d,%3$d,%4$d] 
proghatches.eu.interface.waila.UUID.out.3= Dimension:%5$d
item.proghatch.cover.dedicated.3=Busy Detecting Cover
item.proghatch.cover.dedicated.tooltips.3=0
item.proghatch.cover.dedicated.3.tooltips.5sec.true=Keep signal for 5 sec
item.proghatch.cover.dedicated.3.tooltips.5sec.false=Instantly trun off signal
item.proghatch.cover.dedicated.3.tooltips.inputdetect.true=Detect if input is not empty
item.proghatch.cover.dedicated.3.tooltips.inputdetect.false=Ignore inputs
proghatches.eu.interface.waila.V=Voltage:%dV
proghatches.eu.interface.waila.EA=Expected Current:%dA
proghatches.eu.interface.waila.AA=Sample/Assigned Current:%f/%dA
proghatches.eu.interface.waila.AAL=Uses total Sample Current%f%%
proghatches.eu.source.waila.V=Voltage:%dV
proghatches.eu.source.waila.A=Max Current:%dA
proghatches.eu.source.waila.AC=Providing Current:%dA
proghatches.eu.source.waila.AA=Sample Current:%fA
proghatches.eu.interface.waila.inputmissing=Failed to locate input side
proghatches.provider.waila=Providing Circuit:
item.proghatch.cover.dedicated.tooltips.32=2
item.proghatch.cover.dedicated.tooltips.32.0=No storage
item.proghatch.cover.dedicated.tooltips.32.1=Interface in Cover form. The side of this cover will be connective to ME.
item.proghatch.cover.dedicated.32=ME Interface Cover (WIP)
item.proghatch.cover.dedicated.tooltips.33=2
item.proghatch.cover.dedicated.tooltips.33.0=No storage
item.proghatch.cover.dedicated.tooltips.33.1=Interface in Cover form. The side of this cover will be connective to ME.
item.proghatch.cover.dedicated.33=ME Dual Interface Cover (WIP)
item.proghatch.cover.dedicated.tooltips.34=3
item.proghatch.cover.dedicated.tooltips.34.0=No storage
item.proghatch.cover.dedicated.tooltips.34.1=Interface in Cover form. The side of this cover will be connective to ME.
item.proghatch.cover.dedicated.tooltips.34.2=RMB click with Memory Card to connect. Can only be P2P output.
item.proghatch.cover.dedicated.34=P2P - ME Interface Cover (WIP)
item.proghatch.cover.dedicated.tooltips.35=3
item.proghatch.cover.dedicated.tooltips.35.0=No storage
item.proghatch.cover.dedicated.tooltips.35.1=Interface in Cover form. The side of this cover will be connective to ME.
item.proghatch.cover.dedicated.tooltips.35.2=RMB click with Memory Card to connect. Can only be P2P output.
item.proghatch.cover.dedicated.35=P2P - ME Dual Interface Cover (WIP)
item.proghatch.cover.dedicated.tooltips.36=4
item.proghatch.cover.dedicated.tooltips.36.0=No storage
item.proghatch.cover.dedicated.tooltips.36.1=Interface in Cover form. The side of this cover will be connective to ME.
item.proghatch.cover.dedicated.tooltips.36.2=RMB click with Memory Card to connect. Can only be P2P output.
item.proghatch.cover.dedicated.tooltips.36.3=Busy Detecting Cover function intergrated. RMB click without Shift to configure.
item.proghatch.cover.dedicated.36=P2P - EU Interface Cover (NYI)
programmable_hatches.cover.ae.worksensitive.false=Busy Detecting Mode:OFF
programmable_hatches.cover.ae.worksensitive.true=Busy Detecting Mode:ON
programmable_hatches.cover.ae.delay.false=Instantly trun off signal
programmable_hatches.cover.ae.delay.true=Keep signal for 5 sec
programmable_hatches.cover.ae.inputdetect.false=Ignore inputs
programmable_hatches.cover.ae.inputdetect.true=Detect if input is not empty
programmable_hatches.cover.ae.configure=Configure Busy Detecting
programmable_hatches.cover.ae.memorycard=Cannot be P2P input.
proghatches.eu.interface.hint.amp.local=Instantaneous/Sample/Assigned Current(Only this P2P)
proghatches.eu.interface.hint.input=Input P2P Configuration
proghatches.eu.interface.hint.input.title=P2P output side Readonly
item.proghatch.cover.dedicated.37=ME Cover (WIP)
item.proghatch.cover.dedicated.tooltips.37=3
item.proghatch.cover.dedicated.tooltips.37.0=Let ME Channels go through Hatches.
item.proghatch.cover.dedicated.tooltips.37.1=Make all Covers on the attached Hatch shares the same ME network.
item.proghatch.cover.dedicated.tooltips.37.2=Carry 8 Channels.
buffer.ingredientbuffer.name.0=Ingredient Buffer (T0)
buffer.ingredientbuffer.name.1=Ingredient Buffer (T1)
proghatches.provider.waila.disabled=Cannot connect ME network when working as part of a Multiblock
GT5U.gui.text.proghatches.largepcp.running=Providing Programming Circuit Crafting
multimachine.largeprogrammingcircuitprovider.name=Large Programming Circuit Provider
providerchainer.name=Provider Access Hatch
GT5U.gui.text.proghatch.access_loop=A loop is detected. Check your Provider Access Hatch.
proghatches.largepcp.eu=Hatches:%1$s Power:%2$s EU/t
programmable_hatches.gt.fluidlimit.0=Limit fluid from inserting into different fluid slots.
programmable_hatches.gt.fluidlimit.1=If turned off, fluid will try to fill each slot in order of slot number.
item.prog_toolkit.legacywarning.0=Use this slot to create legacy programming circuit.
item.prog_toolkit.legacywarning.1=§4Warning!! Using this is deprecated, you should rewrite the pattern with new circuit.
item.prog_toolkit.legacywarning.2=Use Programming Circuit Pattern Fixing Tool to fix patterns.
item.prog_toolkit.legacywarning.3=This slot is going to be removed in §4recent release.
item.prog_circuit.legacy=LEGACY
programmable_hatches.gt.insertion=Open Insertion Window
programmable_hatches.gt.insertion.tooltip.0=Put items here to insert them to input.
programmable_hatches.gt.insertion.tooltip.1=In this way you might stack items up to %s, ignoring the stacksize limit.
programmable_hatches.gt.insertion.tooltip.2=ME Interface is not limited by max stacksize as well.
programmable_hatches.gt.insertion.tooltip.3=CAUTION! Once you close this window, items left will be tossed！
programmable_hatches.gt.insertion.tooltip=4
mesuperchest.name.false=ME Super Chest %s
mesuperchest.name.true=ME Quantum Chest %s
hatch.input.buffered.me.itemonly.name=Programmable Crafting Input Bus
programmable_hatches.gt.slave.compat=Do not support GT5u Buffer!
programmable_hatches.gt.mechest.tooltip=3
programmable_hatches.gt.mechest.tooltip.0=There are 16 input slots(#1~#16).
programmable_hatches.gt.mechest.tooltip.1=When storage slot(#0) is not empty, will try transfering items in input slots to storage slot.
programmable_hatches.gt.mechest.tooltip.2=The first 2 non-empty input slots are displayed on the left side.
programmable_hatches.gt.sticky=Sticky Mode
programmable_hatches.gt.piority=Piority
mesupertank.name.false=ME Super Tank %s
mesupertank.name.true=ME Quantum Tank %s
programmable_hatches.gt.metank.tooltip=3
programmable_hatches.gt.metank.tooltip.0=There are 16 input slots for AE2FC Fluid Packet(#0~#15).
programmable_hatches.gt.metank.tooltip.1=Fluid Packet will be decoded into fluid slot if possible.
programmable_hatches.gt.metank.tooltip.2=The first 2 non-empty input slots are displayed on the left side.
programmable_hatches.remote.deferred=Linked. Status is unknown because target chunk is not loaded.
proghatches.ingdistr.eu=Usage/Max EU: %s/%s
GT5U.gui.text.proghatches.ingredientdistr.ready=Ready
GT5U.gui.text.proghatches.ingredientdistr.charging=Charging...
proghatches.ingredientdistr.blocking=Blocking Mode
multimachine.ingredientdistributor.name=Electric Ingredient Distributor(WIP)
proghatches.ingredientdistr.blocking.desc.0=Only when the internal buffer of all ME Ouput Hatch/Bus and the ME storage of their network
proghatches.ingredientdistr.blocking.desc.1=is empty or contains the same ingredient as the one to be transtered
proghatches.ingredientdistr.blocking.desc.2=will the transfer be allowed.
proghatches.ingredientdistr.blocking.desc=3
circuitprovider.prefab.0.name=Prefabricated Circuit Provider(Programmed Circuit)
circuitprovider.prefab.1.name=Prefabricated Circuit Provider(Mold)
circuitprovider.prefab.2.name=Prefabricated Circuit Provider(Slicer)
circuitprovider.prefab.3.name=Prefabricated Circuit Provider(Extruder)
circuitprovider.prefab.4.name=Prefabricated Circuit Provider(White Dwarf Extruder)
circuitprovider.prefab.5.name=Prefabricated Circuit Provider(Lens)
circuitprovider.prefab.0.type.name=Programmed Circuit
circuitprovider.prefab.1.type.name=Mold
circuitprovider.prefab.2.type.name=Slicer
circuitprovider.prefab.3.type.name=Extruder
circuitprovider.prefab.4.type.name=White Dwarf Extruder
circuitprovider.prefab.5.type.name=Lens
programmable_hatches.gt.remotehatch.tooltip.0=Preview of accessible fluid of target tank.
programmable_hatches.gt.remotehatch.tooltip.1=Only partially display first 16 types of accessible fluid. 
programmable_hatches.gt.remotehatch.tooltip.2=Preview is updated every 5 sec for better server performance. No latency for multiblock.
programmable_hatches.gt.remotehatch.tooltip.3=If fluid is present but not shown, make sure the target fluid can be extracted from the same direction this hatch points to.
programmable_hatches.gt.remotehatch.tooltip=4
programmable_hatches.gt.remotebus.tooltip.0=Preview of accessible items of target inventory.
programmable_hatches.gt.remotebus.tooltip.1=Only partially display slot #0 to #15 and an optional circuit slot.
programmable_hatches.gt.remotebus.tooltip.2=Preview is updated every 5 sec for better server performance. No latency for multiblock.
programmable_hatches.gt.remotebus.tooltip.3=If item is present but not shown, make sure the target item can be extracted from the same direction this hatch points to.
programmable_hatches.gt.remotebus.tooltip=4
item.proghatch.cover.dedicated.4=Linked Input Bus Slave Cover
item.proghatch.cover.dedicated.tooltips.4.0=Share the circuit slot among Linked Input Buses with same channel.
item.proghatch.cover.dedicated.tooltips.4.1=Choose §4one§7 Linked Input Bus as Master, and place a Programming Cover on it.
item.proghatch.cover.dedicated.tooltips.4.2=The others with same channel will be salves. Place this Cover on each of them.
item.proghatch.cover.dedicated.tooltips.4.3=Incompatable with Programming Cover.
item.proghatch.cover.dedicated.tooltips.4=4
proghatch.join.fixCircuit=Fix Circuit option is on. Will try to convert old Programming Circuits to new one. Move around to load all chunks that contain Programming Circuit to convert them.
proghatch.itemfixer.info=Patterns Fixed in this ME network: %s.
proghatch.itemfixer.warn=No Patterns to fix! Continue clicking is of no use and might cause performance issue.
item.proghatch_circuit_fixer.name=Programming Circuit Pattern Fixing Tool
proghatches.largepcp.parallel=Parallels
proghatches.eu.interface.waila.halt_count=Recipe check fails due to ingredient exhausted:%s
proghatches.eu.interface.waila.fail_count=Recipe check fails:%s
proghatches.eu.interface.waila.is_machine.no=Target block is not a GT machine.
proghatches.eu.interface.waila.is_machine.dir=Use wrench to specify target machine.
item.proghatch_circuit_fixer.name.tooltip=Right click a ME Network to fix all legacy pattens(encoded in version 0.0.16 or below) in this network.
proghatches.eu.interface.waila.pass=Refund Check:%s
proghatches.eu.interface.waila.pass.p2p=Network Refund Check:%s
item.proghatches.part.eu.source.superconduct.name=EU Source(%s Superconducting)
item.proghatches.part.eu.source.normal.name=EU Source(%s)
programmable_hatches.gt.sticky.autounlock=Auto disable sticky mode when empty.
programmable_hatches.gt.phantom.filter=Filter
item.proghatch_me_plunger.name=ME Plunger
item.proghatch_me_plunger.unbound=Security Terminal missing.
item.proghatch_me_plunger.range=Signal out of range.
item.proghatch_me_plunger.tooltips.0=Clear items from pipe into ME Storage.
item.proghatch_me_plunger.tooltips.1=Clear fluid from tank into ME Storage.
item.proghatch_me_plunger.tooltips.2=Clear contents in buffers of Dual Hatch into ME Storage.
item.proghatch_me_plunger.tooltips.3=Do not affect essentia.
item.proghatch_me_plunger.tooltips=4
item.proghatches.part.lazer.p2p.name=P2P Tunnel - Laser
item.proghatches.part.lazer.p2p.tooltips.0=Not attunable, currently Creative Mode Only.
item.proghatches.part.lazer.p2p.tooltips.1=The attached ME Cable to has to be painted to connect Vaccum Laser Pipe.
proghatches.eu.interface.waila.pass.count.p2p=Passed:%2$s Pending:%3$s
bus.input.multicircuit.name=Multi-circuit Input Bus (%s)
hatch.input.multicircuit.dual.tier.name=Multi-circuit Programmable Dual Input Hatch (%s)
hatch.input.multicircuit.dual.quad.tier.name=Multi-circuit Programmable Multifluid Dual Input Hatch (%s)
item.proghatch.upgrades.tooltips.0=4
item.proghatch.upgrades.tooltips.0.0=Right click a Dual Input Hatch to install.
item.proghatch.upgrades.tooltips.0.1=Each installed Upgrade provides an extra citcuit slot.
item.proghatch.upgrades.tooltips.0.2=3 Upgrades acceptable at max
item.proghatch.upgrades.tooltips.0.3=Harvest the Hatch to retrieve installed Upgrades.
item.proghatch.upgrades.0=Virtual Circuit Slot Upgrade
item.proghatch.upgrades.tooltips.1=7
item.proghatch.upgrades.tooltips.1.0=Right click a Dual Input Hatch to install.
item.proghatch.upgrades.tooltips.1.1=Each installed Upgrade provides an extra ME Item slot.
item.proghatch.upgrades.tooltips.1.2=This item slot pulls from ME Network and is shared by all Dual Inventories.
item.proghatch.upgrades.tooltips.1.3=As if there is a Stocking Input Bus intergreted inside.
item.proghatch.upgrades.tooltips.1.4=Pull from network of adjacent ME Interface or the hatch itself(if it has one).
item.proghatch.upgrades.tooltips.1.5=4 Stocking Upgrades total of all types acceptable at max
item.proghatch.upgrades.tooltips.1.6=Harvest the Hatch to retrieve installed Upgrades.
item.proghatch.upgrades.1=ME Stocking Item Upgrade
programmable_hatches.gt.item.pull.me.0=Mark item to pull items from ME storgae.
programmable_hatches.gt.item.pull.me.1=Access the ME storgae of the adjacent ME Interface.
programmable_hatches.gt.item.pull.me.2=Only works with non-empty buffer. If all Buffers are empty, this will not be accessed! 
item.proghatch.upgrades.2=ME Stocking Fluid Upgrade
item.proghatch.upgrades.tooltips.2=7
item.proghatch.upgrades.tooltips.2.0=Right click a Dual Input Hatch to install.
item.proghatch.upgrades.tooltips.2.1=Each installed Upgrade provides an extra ME Item slot.
item.proghatch.upgrades.tooltips.2.2=This fluid slot pulls from ME Network and is shared by all Dual Inventories.
item.proghatch.upgrades.tooltips.2.3=Pull from network of adjacent ME Interface or the hatch itself(if it has one).
item.proghatch.upgrades.tooltips.2.4=As if there is a Stocking Input Hatch intergreted inside.
item.proghatch.upgrades.tooltips.2.5=4 Stocking Upgrades total of all types acceptable at max
item.proghatch.upgrades.tooltips.2.6=Harvest the Hatch to retrieve installed Upgrades.
proghatch.ingbuf.fail.cache.diff.bus=The bus#%s has %s in its cache which is different from %s.
proghatch.ingbuf.fail.net.diff.bus=The bus#%s has %s in its ME storage which is different from %s.
proghatch.ingbuf.fail.inject.failure.true.bus=Fail to inject to ME Bus#%s might due to insufficient space. To inject:%s Left:%s
proghatch.ingbuf.fail.inject.failure.false.bus=Fail to inject to bus#%s due to ME Bus not working.
proghatch.ingbuf.fail.crash=Crashed when trying to transfer %s
proghatch.ingbuf.fail.cache.diff.hatch=The hatch#%s has %s in its cache which is different from %s.
proghatch.ingbuf.fail.net.diff.hatch=The hatch#%s has %s in its ME storage which is different from %s.
proghatch.ingbuf.fail.inject.failure.true.hatch=Fail to inject to ME Hatch#%s might due to insufficient space. To inject:%s Left:%s
proghatch.ingbuf.fail.inject.failure.false.hatch=Fail to inject to hatch#%s due to ME Hatch not working.
proghatch.ingbuf.fail.insufficient.length.bus=%s types of Item, only %s Buses are available
proghatch.ingbuf.fail.insufficient.length.hatch=%s types of Fluid, only %s Hatches are available
proghatch.ingbuf.fail.insufficient.space.bus=Bus#%s cannot hold all of %s, only %s of them are acceptable.
proghatch.ingbuf.fail.insufficient.space.hatch=Hatch#%s cannot hold all of %s, only %s of them are acceptable.
programmable_hatches.gt.shared=Configure shared inventory
proghatch.chunk_loading_alert.owner=Only owner can change its mode.
proghatch.chunk_loading_alert.mode.0=Inform: all players online
proghatch.chunk_loading_alert.mode.1=Inform: players in same dimension
proghatch.chunk_loading_alert.mode.2=Inform: only owner
proghatch.chunk_loading_alert.mode.3=Inform: none
tile.proghatch.chunk_loading_alert.name=Alerting Anchor(Currently Disabled)
tile.chunk_loading_alert.tooltip.0=Connect it to a ME network. Require no channel and energy.
tile.chunk_loading_alert.tooltip.1=NOT an Spatial Anchor
tile.chunk_loading_alert.tooltip.2=DO NOT load chunks
tile.chunk_loading_alert.tooltip.3=Just send players alert when chunks of current ME network is unloaded.
tile.chunk_loading_alert.tooltip.4=Right click to switch mode.
tile.chunk_loading_alert.tooltip=5
proghatch.chunk_loading_alert.alert=Alerting Anchor: Chunk [%s] is unloaded, containing %s ME Node(s).
proghatch.chunk_loading_alert.alert.global=Alerting Anchor: [%s] all players online.
proghatch.chunk_loading_alert.alert.dim=Alerting Anchor: [%s] sending to players in same dimension.
proghatch.chunk_loading_alert.alert.private=Alerting Anchor: [%s] sending to owner.
anchoralert.usage=/anchoralert toggle private|dim|global|all
anchoralert.private.true=Block private alert message from Alerting Anchor.
anchoralert.private.false=Allow private alert message from Alerting Anchor.
anchoralert.dim.true=Block dimensional alert message from Alerting Anchor.
anchoralert.dim.false=Allow dimensional alert message from Alerting Anchor.
anchoralert.global.true=Block global alert message from Alerting Anchor.
anchoralert.global.false=Allow global alert message from Alerting Anchor.
proghatch.chunk_loading_alert.count=All Chunks of ME network: %2$s Improperly unloaded Chunks: %1$s
proghatches.largepcp.remove_circuit=Remove unused Programming Circuits in ME storage.
proghatches.eucreafting.duty.all=Duty: All
proghatches.eucreafting.duty.io=Duty: Only Item/Fluid Output
proghatches.eucreafting.duty.eu=Duty: Only GTEU Output
proghatches.eucreafting.duty.machine=Duty: Only Monitor GT Machine
proghatches.eucreafting.duty.0.0=Allow: Item/Fluid Output
proghatches.eucreafting.duty.1.0=Disallow: Item/Fluid Output
proghatches.eucreafting.duty.0.1=Allow: EU Output
proghatches.eucreafting.duty.1.1=Disallow: EU Output
proghatches.eucreafting.duty.0.2=Allow: GT Machine Monitor
proghatches.eucreafting.duty.1.2=Disallow: GT Machine Monitor
data.input.me.name=Data Access Hatch (ME)
item.ItemGolemCore.120.name=Golem Core: Mainteinence
proghatches.golemcore.120.hint.0=Bound Multiblock §cController§7 with Golemancer's Bell
proghatches.golemcore.120.hint.1=And clear the way to the §cMainteinence Hatch§7 of the Multiblock!
proghatches.restricted.bound.up=Maximum amount to pull:
proghatches.restricted.bound.down=Do not pull if stocking amount lower than:
proghatches.restricted.configure=Click to configure
fluid.input.me.restriced.name=Restricted Stocking Input Hatch (ME)
fluid.input.bus.me.restriced.name=Restricted Stocking Input Bus (ME)
proghatches.restricted.multiples=Restrict amount to a multiply of Minimum amount
proghatches.amountmaintainer.phantomclick.mode.0=Marked Fluid Container treated as Item
proghatches.amountmaintainer.phantomclick.mode.1=Marked Fluid Container treated as Fluid
proghatches.amountmaintainer.redstone.mode.0=RS P2P Offline:Maintain RS P2P Online:Maintain If On
proghatches.amountmaintainer.redstone.mode.1=RS P2P Offline:Clear    RS P2P Online:Maintain If On
proghatches.amountmaintainer.redstone.mode.2=RS P2P Offline:Maintain RS P2P Online:Invert
proghatches.amountmaintainer.redstone.mode.3=RS P2P Offline:Clear    RS P2P Online:Invert
proghatches.amountmaintainer.redstone.offline=§cOffline
proghatches.amountmaintainer.redstone.online=§aOnline
proghatches.amountmaintainer.memorycard=Use Memory Card bound to a Redstone P2P to link
item.proghatches.amountmaintainer.name=Amount Maintaining Bus
proghatches.amountmaintainer.redstone.state.on=Maintain amount to %s
proghatches.amountmaintainer.redstone.state.off=Maintain amount to 0
proghatches.amountmaintainer.amount.0=Expected amount of item/fluid you want to maintain.
proghatches.amountmaintainer.amount.1=Specify the type of item/fluid by marking the slot on the left side.
proghatches.amountmaintainer.amount.2=The value might be overridden to 0 if Redstone config.
proghatches.amountmaintainer.amount.3=Do not affect item/fluid other than the marked item/fluid.
proghatches.amountmaintainer.phantomslot=To specify whether you want to mark the item itself or the contained fluid, use the button on the right side.
item.amountmaintainer.name.tooltip.0=Use Item/Fluid Storage to maintain the amount of Item/Fluid of target Inventory
item.amountmaintainer.name.tooltip.1=as if the target Inventory is a slot in ME Interface Config Slot.
item.amountmaintainer.name.tooltip.2=Only active for specified Item/Fluid, will not add or remove Item/Fluid of ther types.
tile.proghatch.submitter.name=Cyclic Pattern Submitter(WIP)
proghatches.submitter.mode.0=Cancel Crafting Task if Pattern is pushed: False
proghatches.submitter.mode.1=Cancel Crafting Task if Pattern is pushed: True
proghatches.submitter.power.0=Left Click: Turn ON/OFF 
proghatches.submitter.power.1=Right Click: Turn OFF and move cursor(and lose track on current task)
proghatches.amountmaintainer.rscard=Put Redstone Card to configure Redstone
proghatches.amountmaintainer.rscard.mode.0=Always ON
proghatches.amountmaintainer.rscard.mode.1=Always OFF
proghatches.amountmaintainer.rscard.mode.2=Redstone
proghatches.amountmaintainer.rscard.mode.3=Redstone Inverted
proghatches.amountmaintainer.rscard.mode.4=Rising Edge
proghatches.amountmaintainer.rscard.mode.5=Falling Edge
proghatches.amountmaintainer.craftcard=Put Crafting Card to auto-request for missing material
proghatches.submitter.state.0=§3Idle
proghatches.submitter.state.1=§cFailed
proghatches.submitter.state.2=§aSubmitted
hatch.input.dual.oc=Programmable Dual Input Hub (ME)
tile.proghatches.card_reader.name=Sensor Card Reader
proghatch.eucrafting.warn=§cExperimental item! Disabled by default, turn on Mixin in config to make it work.
tile.reactor_syncer.tooltip.0=Output redstone signal accroding to IC2 Nuclear Reactor update ticker.
tile.reactor_syncer.tooltip.1=Helpful if you want to manipulate the Reactor inventory without halting the Reactor.
tile.reactor_syncer.tooltip.2=Note that vanilla redstone update every 2 ticks!
tile.reactor_syncer.tooltip.3=Better use Redstone P2P, Redstone Conduit or Redalloy Wire instead.
tile.reactor_syncer.tooltip=4
tile.proghatch.reactor_syncer.name=Reactor Update Synchronizer
hatch.dualinput.slave.inv.mapping.name=Dual Inventory Mapping Slave
hatch.dualinput.slave.inv.mapping.me.name=Dual Inventory Mapping Slave (ME)
programmable_hatches.gt.pattern.mapping=Insert Pattern(ME Mapping Slave)
hatch.dualinput.slave.inv.mapping.me.missing=Not Linked
programmable_hatches.cover.me.drop=Cover is dropped, please re-attach it to update ME Network info. 
tile.reactor_syncer.info.rs=Redstone:
tile.reactor_syncer.info.update=Update tick:
tile.reactor_syncer.info.max=Set to 15
tile.reactor_syncer.info.min=Set to 0
hatch.dualinput.slave.item.name=Item Input Slave
hatch.dualinput.slave.fluid.name=Fluid Input Slave
proghatch.chunk_loading_alert.info=Alerting Anchor: Chunk [%s] is not properly unloaded.
proghatch.chunk_loading_alert.info.none=Alerting Anchor: No improperly-unloaded chunks.
proghatch.waypoint.info=Alerting Anchor Mark
programmable_hatches.buffer.waila.hidden=§rAnd %s more §2Idle§r Buffers...
proghatch.dualhatch.optinv.broken=§4This Multiblock Machine does not support Upgrades! Please create issue if you see this.
proghatch.ingbuf.fail.net.diff.bus.null=The bus#%s has %s in its ME storage while it should be empty.
proghatch.ingbuf.fail.cache.diff.bus.null=The bus#%s has %s in its cache while it should be empty.
proghatch.ingbuf.fail.net.diff.hatch.null=The hatch#%s has %s in its ME storage while it should be empty.
proghatch.ingbuf.fail.cache.diff.hatch.null=The hatch#%s has %s in its cache while it should be empty.
tile.reactor_syncer.skip.true=No Redstone in the first Reactor Cycle: true
tile.reactor_syncer.skip.false=No Redstone in the first Reactor Cycle: false
tile.reactor_syncer.skip.0=Reactor updates every 20 ticks, however every time you load the game the counter shuffles.
tile.reactor_syncer.skip.1=This option gives you one update cycle to restore everything.
tile.reactor_syncer.skip.2=Especially useful if the game was saved in a bad tick, and the counter happens to be 0 at random.
proghatches.restricted.refresh.0=Refresh Slots
proghatches.restricted.refresh.1=Just to query currently available amount, actual amount may vary in runtime.
programmable_hatches.gt.merge=Merge buffers locking same recipe and display one single buffer to multiblock.
proghatches.restricted.multiples.alt=Restrict amount to a power of 2 multiply of Minimum amount
proghatches.restricted.multiples.exact=No restriction
hatch.commport.name=Statusbus Communication Port
proghatch.ingbuf.yield=State: Yield. Because the Statusbus is acquired by another host.
proghatch.ingbuf.acquring=State: Acquring. Prevent other hosts from locking new recipe.
proghatch.ingbuf.locked=State: Locked. Will unlock if output network is empty.
proghatch.ingbuf.idle=State: Idle.
GT5U.gui.text.proghatch.commport=Cannot run in non-Blocking Mode with Statusbus Communication Port.
programmable_hatches.gt.fluidlimit.neo=Fluid filling policy
programmable_hatches.gt.fluidlimit.neo.0=Normal: Fill fluid slots of lower index, then higher.
programmable_hatches.gt.fluidlimit.neo.1=Limiting: Only fill slot of same fluid, if no same fluid present then fill the first empty slot.
programmable_hatches.gt.fluidlimit.neo.2=Empty first: Fill empty fluid slots first, then try Nomal mode.
proghatches.decoy.reservefirst.enabled=Reserve the first slot for inventory of highest priority: true
proghatches.decoy.reservefirst.disabled=Reserve the first slot for inventory of highest priority: false
fluid.input.bus.me.decoy.name=Assline Decoy Stocking Input Bus (ME)
fluid.input.me.decoy.name=Assline Decoy Stocking Input Hatch (ME)
fluid.input.bus.me.pfilter.name=Priority Filtering Stocking Input Bus (ME)
fluid.input.me.pfilter.name=Priority Filtering Stocking Input Hatch (ME)
proghatches.priority.filter=Auto-pull priority filter
proghatch.proxy.disable=Disabled
proghatch.proxy.Strict=Strict Match
proghatch.proxy.ignoreNBT=Ignore NBT Tag
proghatch.proxy.oredict=Use Oredict
proghatch.proxy.passthrough=All items in storage
tile.proghatch.storageproxy.0.name=ME Storage Proxy(Advanced)
tile.proghatch.storageproxy.1.name=ME Fluid Storage Proxy
tile.proghatch.storageproxy.2.name=ME Storage Proxy
tile.proghatches.proxy.tooltip.0=1
tile.proghatches.proxy.tooltip.0.0=Provide filtered access to ME Storage Bus
tile.proghatches.proxy.tooltip.1=1
tile.proghatches.proxy.tooltip.1.0=Provide filtered access to ME Fluid Storage Bus
tile.proghatches.proxy.tooltip.2=1
tile.proghatches.proxy.tooltip.2.0=Provide filtered access to ME Storage Bus
proghatches.submitter.number.mode.0=Submit one Pattern per time
proghatches.submitter.number.mode.1=Submit as many Patterns as possible
proghatches.submitter.skip.mode.0=Retry next time when failed to submit
proghatches.submitter.skip.mode.1=Skip current pattern when failed to submit
item.proghatches.storageproxy.part.0.name=ME Storage Proxy(Advanced)
item.proghatches.storageproxy.part.1.name=ME Fluid Storage Proxy
item.proghatches.storageproxy.part.2.name=ME Storage Proxy
item.proghatches.exciter.0.name=Ad-Hoc Network Exciter
item.exciter.name.tooltip.0=Infinity AE Energy
item.exciter.name.tooltip.1=But neither Controllers nor attempts to transfer energy outside is allowed.
item.exciter.name.tooltip.2=That's to say, it will not work with:
item.exciter.name.tooltip.3=ME Controller, Quartz Fiber, Energy Cell or Charger
proghatch.ingbuf.noblocking.reason.1=Blocking Mode Off: ALL Frame Boxes must be Terbium Frame Boxes.
proghatch.ingbuf.noblocking.reason.2=Blocking Mode Off: Non-ME Hatch is not allowed.
programmable_hatches.gt.forcecheck=Force update every tick. Harmful to server performance. Useless if hatch works fine.
programmable_hatches.gt.ensureintmax.0=Hide part of the slots from multiblock controller to avoid total amount exceeding IntMax.
programmable_hatches.gt.ensureintmax.1=Guarantee: controller can see at least IntMax/2 of the items.
programmable_hatches.gt.ensureintmax.2=You can trun it off if you are pretty sure that the same item won't occupy 2 or more slots
programmable_hatches.gt.ensureintmax.3=or the controller can handle amount>IntMax properly.
proghatches.craftingdumper.tooltip.0=When pattern pushed successfully, retry %s times without co-processes cost.
tile.proghatches.craftingdumper.0.name=Crafting Dumper
tile.proghatches.craftingdumper.1.name=4x Speed Crafting Dumper
tile.proghatches.craftingdumper.2.name=16x Speed Crafting Dumper
tile.proghatches.craftingdumper.3.name=64x Speed Crafting Dumper
tile.proghatches.craftingdumper.4.name=256x Speed Crafting Dumper
tile.proghatches.craftingdumper.5.name=1024x Speed Crafting Dumper
tile.proghatches.craftingdumper.6.name=4096x Speed Crafting Dumper
tile.proghatches.craftingdumper.7.name=16384x Speed Crafting Dumper
tile.proghatches.craftingdumper.8.name=Superluminal Crafting Dumper
ph.hatch.void.name=Void Output Hatch
ph.bus.void.name=Void Output Bus
item.proghatch.cover.dedicated.tooltips.100=4
item.proghatch.cover.dedicated.tooltips.100.0=Control the machine depends on the level of ME Storage.
item.proghatch.cover.dedicated.tooltips.100.1=If machine itself connects to ME network, check the network it connects.
item.proghatch.cover.dedicated.tooltips.100.2=Or else try to find ME Cover and check its network.
item.proghatch.cover.dedicated.tooltips.100.3=Does not require channels, neither does it carry one.
item.proghatch.cover.dedicated.100=Level Control Cover
programmable_hatches.gt.cmmode.0=MA Mode
programmable_hatches.gt.cmmode.1=Molcular Assembler Mode, directly accepts materials from patterns, pypassing the inventory interaction.
programmable_hatches.gt.cmmode.2=Just like MA, you don't need to turn Blocking Mode on.
programmable_hatches.gt.cmmode.3=Do not use Dual Interface, even if your pattern contains fluid.
programmable_hatches.gt.cmmode.4=Does not accept items from cache of Interface(just like Molcular Assembler).
programmable_hatches.gt.cmmode.5=So do not place unexpected TEs around, or Interface will be tricked into pushing materials into cache!
programmable_hatches.gt.cmmode.6=This happens even it TE has no inventory in some version, or just use Interface in panel form.
proghatches.levelcontrolcover.invert.0=On if >=amount
proghatches.levelcontrolcover.invert.1=On if <=amount
item.proghatches.stockingexport.0.name=ME Stocking Export Bus
item.proghatches.stockingexport.1.name=ME Stocking Fluid Export Bus
item.stockingexport.name.tooltip.0.0=Try to export everything in storage outside, just like oredict card with wildcard(*) config but also applies to item without oredict.
item.stockingexport.name.tooltip.1.0=Cannot specify target item, only accept up to 16 (Super) Speed Upgrades(base 1, each upgrade x4/x2) .
item.stockingexport.name.tooltip.0.1=Try to export everything in storage outside
item.stockingexport.name.tooltip.1.1=Cannot specify target fluid, only accept up to 16 (Super) Speed Upgrades(base 1000mb, each upgrade x4/x2) .
item.proghatches.part.ma.p2p.name=P2P Tunnel - Molecular Assembly
item.proghatches.part.ma.p2p.tooltips.0=Delegate crafting requests to a remote point.
item.proghatches.part.ma.p2p.tooltips.1=Input side for Interface, output side for Molecular Assembler.
item.proghatches.part.ma.p2p.tooltips.2=Not attunable
enderio.proghatch.ma.conduit.name=Molecular Assembly Conduit
proghatches.gt.void.fx.true=FX:ON
proghatches.gt.void.fx.false=FX:OFF
tile.proghatch.ma_iface.name=Molecular Assembly Interface(WIP)
tile.proghatches.circuit_interceptor.name=CPU Extract Request Inteceptor(Programming Circuit)
proghatch.ma_iface.tooltip.0=Accept Molecular Assembly request from one side
proghatch.ma_iface.tooltip.1=then pass to the container on the opposite side.
proghatch.ma_iface.tooltip.2=Can handle patterns with at most 1 fluid.
programmable_hatches.gt.capOverride.64=Set to value>=64 to override max capacity.
programmable_hatches.gt.capOverride=Set to a non-zero value to override max capacity.
proghatch.circuit_interceptor.tooltip.0=Prevent Crafting CPU from using Programming Circuits in stocking.
proghatch.circuit_interceptor.tooltip.1=Thus force it to craft them from Circuit Providers.
programmable_hatches.gt.holder.max=Left click this button with item to recoed, %s at max.
programmable_hatches.gt.holder.apply=Left click to overwrite circuit slot, right click to erase.
item.proghatch.cover.dedicated.90=Basic Circuit Holder
item.proghatch.cover.dedicated.91=Good Circuit Holder
item.proghatch.cover.dedicated.92=Advanced Circuit Holder
item.proghatch.cover.dedicated.93=Elite Circuit Holder
item.proghatch.cover.dedicated.94=Master Circuit Holder
item.proghatch.cover.dedicated.tooltips.90=1
item.proghatch.cover.dedicated.tooltips.90.0=Record 9 types of item to write circuit slot within machine GUI
item.proghatch.cover.dedicated.tooltips.91=1
item.proghatch.cover.dedicated.tooltips.91.0=Record 12 types of item to write circuit slot within machine GUI
item.proghatch.cover.dedicated.tooltips.92=1
item.proghatch.cover.dedicated.tooltips.92.0=Record 15 types of item to write circuit slot within machine GUI
item.proghatch.cover.dedicated.tooltips.93=1
item.proghatch.cover.dedicated.tooltips.93.0=Record 32 types of item to write circuit slot within machine GUI
item.proghatch.cover.dedicated.tooltips.94=1
item.proghatch.cover.dedicated.tooltips.94.0=Record 64 types of item to write circuit slot within machine GUI
programmable_hatches.gt.merge.0=Merge buffers locking same recipe and multiblock will see one single buffer.
programmable_hatches.gt.merge.1=Might cause some problems if sum of some material hits 2.1G?
proghatch.submitter.tooltip.0=Use Redstone Comparator to get the index of currently submitted pattern.
programmable_hatches.gt.elasticbuffer.0=Infinity Buffer Mode
programmable_hatches.gt.elasticbuffer.1=Append an extra Buffer to accept input if no other Buffers can.
programmable_hatches.gt.elasticbuffer.2=Those extra Buffers are not viewable and will be removed if empty.
programmable_hatches.gt.elasticbuffer.3=Will be merged to an empty regular Buffer if possible.
programmable_hatches.gt.elasticbuffer.4=This option is only available on some hatch.
item.proghatch.upgrades.tooltips.3=3
item.proghatch.upgrades.tooltips.3.0=Right click a Dual Input Hatch to install.
item.proghatch.upgrades.tooltips.3.1=Unlock Infinity Buffer Mode, for non-ME hatches.
item.proghatch.upgrades.tooltips.3.2=Harvest the Hatch to retrieve installed Upgrades.
item.proghatch.upgrades.3=Infinity Buffer Upgrade
proghatch.gui.button.power_switch.ex=§cShift-Click to open experimental option panel.
proghatch.keybinding.kit.switch.mode.0=Mode 1: Disabled
proghatch.keybinding.kit.switch.mode.1=Mode 2: Normal
proghatch.keybinding.kit.switch.mode.2=Mode 3: Normal + Reset Circuit
proghatch.keybinding.kit.switch.desc=Switch Toolkit Mode (equipped in Baubles slot)
tile.proghatches.circuit_interceptor.change=Item to intercept: %s
tile.proghatches.circuit_interceptor.1.name=CPU Extract Request Inteceptor
proghatch.circuit_interceptor.tooltip.1.0=Prevent Crafting CPU from using item in stocking.
proghatch.circuit_interceptor.tooltip.1.1=Right click with item to specify the item.
tile.proghatches.autofillerMKII.name=Advanced Fluid Auto Filler
tile.proghatches.autofillerMKII.tooltip.0=Besides normal Auto Filler behaviour, also generate patterns for craftable fluid.
tile.proghatches.autofillerMKII.tooltip.1=Infinite parallels.
achievement.proghatch.toolkit=Try equipping this on Baubles Slot!
achievement.proghatch.toolkit.desc=Then bind a key in settings to switch mode!
output.bus.storage.name=Storage Output Bus (ME)
output.hacth.storage.name=Storage Output Hatch (ME)
item.proghatches.emitterpattern.name=Emitting Encoded Pattern
tile.proghatches.request_tunnel.name=Crafting Request Tunnel
item.emitterpattern.name.tooltip.0=A special pattern without inputs. Click RMB when not stacked to configure outputs. 
item.emitterpattern.name.tooltip.1=It's like an ME Level Emitter with Crafting Card, but pushes pattern instead of sending RS signal.
item.emitterpattern.name.tooltip.2=This pattern will not send materials when being pushed, but Crafting CPU will add outputs to waiting list.
item.emitterpattern.name.tooltip.3=Especially, Crafting Request Tunnel will capture the outputs when accepting this pattern.
proghatch.request_tunnel.tooltip.0=§7This is an §cMA§7 device, it's like a §cM§7olecular §cA§7ssembler, but accepts patterns rather than materials from patterns.
proghatch.request_tunnel.tooltip.1=When accepting patterns, it stores inputs into storage and records outputs. Then craft or extract materials to satisfy those outputs.
proghatch.request_tunnel.tooltip.2=Outputs will be cached in inventory, use pipes to send them back, or use wrench to specify the auto-output direction.
proghatch.request_tunnel.tooltip.3=Please use ME Interface (even if pattern contains fluids), ME Dual Interface does not work fine!
programmable_hatches.gt.newcrib.0=Compatibility for new GT recipe cahces
programmable_hatches.gt.newcrib.1=When on, GT Multi will cache possible recipes of a buffer thus might search recipe from this hatch faster.
programmable_hatches.gt.newcrib.2=GT Multi only caches once for each buffer, then never updates it.
programmable_hatches.gt.newcrib.3=So if you're using a Stocking Upgrade, cached recipes will not change when stocking amount changes.
programmable_hatches.gt.newcrib.4=Turning off this mode will clear all the caches (can be used to force-update the cache recipes).
programmable_hatches.gt.newcrib.5=When off, GT Multi is not allowed to cache recipes for this hatch.
programmable_hatches.gt.newcrib.nosupport=§cNot supported on current GT5u
item.proghatches.part.tunnel.name=Crafting Request Tunnel
provider.water.name=Water Provider
input.focus.me.name=Automatable Focus Input Bus (ME)
input.dataorb.name=Automatable Data Orb Repository
proghatches.orb_switcher.nbt.mode.0=Match NBT: false
proghatches.orb_switcher.nbt.mode.1=Match NBT: true
proghatches.orb_switcher.meta.mode.0=Match meta: false
proghatches.orb_switcher.meta.mode.1=Match meta: true
proghatch.orb_switcher.tooltip.0=Switch the special item in Hatch according to the item in circuit slot
proghatch.orb_switcher.tooltip.1=Connect Stocking Port(blue) to stocking ME Network conatining all possible items.
proghatch.orb_switcher.tooltip.2=Connect Target Port(green) to ME Network accessible to the special Hatch .
proghatch.orb_switcher.tooltip.3=Turn the front side with a wrench to a GT Blcok with circuit slot.
proghatch.orb_switcher.tooltip.4=Then this device will maintain Target ME Network 
proghatch.orb_switcher.tooltip.5=to make sure it only has one item same as the one in circuit slot.
proghatch.orb_switcher.tooltip.6=Hint: use this to automate Power Plant Catalyst/Target Chamer Foci/Element Orb Hatch
input.catalyst.me.name=Automatable Catalyst Housing (ME)
tile.proghatches.orb_switcher.name=Catalyst Item Switcher(WIP)
proghatches.amountmaintainer.interval.0=Update interval in tick(s)
hatch.dualinput.stocking.me.name=Stocking Dual Input Hatch (ME)
hatch.dualinput.stocking.autopull.me.name=Advanced Stocking Dual Input Hatch (ME)
hatch.dualinput.stocking.autopull.program=Auto consume Programming Circuit and set the virtual circuit slot
proghatch.stockingdual.exceedintmax=Actual pulled amount exceeds 2.1G, check tooltips for real amount! 
proghatch.stockingdual.intmax=Max pull amount (in int.max)
proghatch.stockingdual.intmax.tooltips=Maximum amount allowed to pull in multiples of int.max(2.1G). Do not set to a large number especially when you has 9.2E item/fluid in storage.
proghatch.saved.statistic=Saved pushPattern calls: %s
proghatches.orb_switcher.amount=Amount of items expected in Stocking Port Network
phantom.bus.name=Phantom Input Bus
proghatch.phantombus.chat.world.missing=World not loaded. dimID: %s
proghatch.phantombus.chat.chunk.missing=Chunk not loaded. dimID,x,y,z: %s,%s,%s,%s
proghatch.phantombus.chat.te.missing=Not a TE, removing from list. dimID,x,y,z: %s,%s,%s,%s
proghatch.phantombus.chat.te.incorrect=Not a Phantom Input Bus, removing from list. dimID,x,y,z: %s,%s,%s,%s
proghatch.phantombus.chat.success=Synchronized successfully to %s Phantom Input Bus(es).
proghatch.phantombus.chat.link.exceed=Max amount of links exceed: 1023
proghatch.phantombus.chat.link.success=Linked. Total links: %s
proghatch.phantombus.chat.link.noop=Already linked. Total links: %s
item.proghatches.part.cow.name=Channel-over-Wire Panel
item.proghatches.part.cow.tooltips.0=Pass ME channels through GT Cable!
item.proghatches.part.cow.tooltips.1=Connect CoW Panel with GT Cable and use Memory Card to link them
item.proghatches.part.cow.tooltips.2=If link is a success, this panel can pass 32 channels!
item.proghatches.part.cow.tooltips.3=Cannot have more than 2 panels with same freq in same GT wire net
item.proghatches.part.cow.tooltips.4=Can be placed on Dense Cable
proghatches.requesttunnel.both=Stocking first
proghatches.requesttunnel.craft=Craft Only
proghatches.requesttunnel.stock=Stocking Only
item.proghatches.chip.name=Circuit Provider Upgrade Chip
proghatches.chip.tooltips=Instant complete! 
item.proghatch_circuit_fixer2.name=Pattern Programming Circuit Normalization Tool
multimachine.mbproxy.name=Multiblock Machine IO Proxy
hatch.patternhousing.name=Pattern Housing
item.proghatch_badge.name="Pioneer" Badge
item.proghatch_badge.tooltips.0=Put it in your inventory, and all hatches of this mod
item.proghatch_badge.tooltips.1=that supports both MUI1 & MUI2 will use the MUI2 version!
item.proghatch_badge.tooltips.2=MUI2 support is still in progress! Might be incomplete or buggy!
item.proghatch_badge.tooltips=3
programmable_hatches.gt.restrictToInt.0=Set buffer capacity to Integer.MAX
programmable_hatches.gt.restrictToInt.1=instead of Long.MAX
tile.proghatches.fluidDiscretizerMKII.name=Fluid Discretizer MK.II
tile.proghatches.fluidDiscretizerMKII.tooltip.0=The fluid drops discretized by this device
tile.proghatches.fluidDiscretizerMKII.tooltip.1=is only accessible to devices in the SAME network!
tile.proghatches.fluidDiscretizerMKII.tooltip.2=That's to say, ME Interface + Storage Bus will not passthrough the drops.
